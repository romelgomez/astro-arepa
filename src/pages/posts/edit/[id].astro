---
import Heading from '../../../components/Heading.astro';
import { PostForm } from '../../../components/PostForm';
import { Button } from '../../../components/ui/button';
import RedLayout from '../../../layouts/RedLayout.astro';
import type { PostResponse } from '../../../types/post';

const postId = Astro.url.pathname.split('/').pop();

let post: PostResponse | null = null;

const API_BASE_URL = import.meta.env.PUBLIC_API_BASE_URL;

try {
  const res = await fetch(`${API_BASE_URL}${postId}`);
  if (res.ok) {
    const response = await res.json();
    if (response.code === 200 && response.status === 'OK') {
      post = response.data;
    }
  }
} catch (error) {
  console.error('Error fetching the post:', error);
}

// TODO: is duplicated
type AstroLocals = {
  authToken?: string | null;
  authStatus: 'signed-in' | 'signed-out';

  // authMessage: string;
  // authReason: string;
  // auth: [Function (anonymous)],
  // currentUser: [AsyncFunction (anonymous)]
};

const { authToken } = Astro.locals as unknown as AstroLocals;
---

<RedLayout title="Edit Post">
  <div slot="main" class="main-slot">
    <Heading tagName="h1" size="h4" classes="neue76"> EDIT POST </Heading>

    <a href="/posts">
      <Button variant="outline"> View Posts </Button>
    </a>

    {
      post ? (
        <PostForm post={post} authToken={authToken} client:load />
      ) : (
        <p class="text-red-500 mt-6">Post not found or unable to load data.</p>
      )
    }

    <br />
  </div>
</RedLayout>
