---
import Heading from '../../../components/Heading.astro';
import { Button } from '../../../components/ui/button';
import RedLayout from '../../../layouts/RedLayout.astro';
import type { PostResponse } from '../../../types/post';
const API_BASE_URL = import.meta.env.PUBLIC_API_BASE_URL;
const postId = Astro.url.pathname.split('/').pop();

let post: PostResponse | null = null;

try {
  const res = await fetch(`${API_BASE_URL}${postId}`);
  if (res.ok) {
    const response = await res.json();
    if (response.code === 200 && response.status === 'OK') {
      post = response.data;
    }
  }
} catch (error) {
  console.error('Error fetching the post:', error);
}
---

<RedLayout title="View Post">
  <div slot="main" class="main-slot">
    <Heading tagName="h1" size="h4" classes="neue76"> VIEW POST </Heading>

    <a href="/posts">
      <Button variant="outline"> Back to Posts </Button>
    </a>

    {
      post ? (
        <div
          class="post-details mt-6 p-6 rounded-md border bg-white"
          id="post-details"
        >
          <h2 class="text-2xl font-bold mb-2">{post.title}</h2>
          <h3 class="text-xl text-gray-600 mb-4">
            {post.sub_title || 'No subtitle provided'}
          </h3>

          <div class="mb-4">
            <strong>Published:</strong> {post.published ? 'Yes' : 'No'}
          </div>

          <div class="mb-4">
            <strong>Description:</strong>
            <p class="mt-1">{post.description}</p>
          </div>

          <br />

          <hr />

          <br />

          <a href={`/posts/edit/${post.id}`}>
            <Button variant="outline">Edit Post</Button>
          </a>

          <Button id="delete-button" variant="destructive" className="ml-2">
            Delete Post
          </Button>
        </div>
      ) : (
        <p class="text-red-500 mt-6">Post not found or unable to load data.</p>
      )
    }
  </div>
</RedLayout>

<script
  define:vars={{
    API_BASE_URL: `${API_BASE_URL}`,
    postId: `${postId}`,
  }}
>
  // Ensure the script runs only when the document is fully loaded
  document.addEventListener('DOMContentLoaded', function () {
    const deleteButton = document.getElementById('delete-button');

    if (deleteButton) {
      deleteButton.addEventListener('click', async () => {
        const confirmed = confirm('Are you sure you want to delete this post?');
        if (!confirmed) return;

        try {
          const response = await fetch(`${API_BASE_URL}${postId}`, {
            method: 'DELETE',
          });

          if (response.ok) {
            alert('Post deleted successfully!');
            window.location.href = '/posts';
          } else {
            const errorData = await response.json();
            alert(
              `Failed to delete post: ${errorData.message || 'Unknown error'}`,
            );
          }
        } catch (error) {
          alert('An unexpected error occurred. Please try again later.');
        }
      });
    }
  });
</script>
